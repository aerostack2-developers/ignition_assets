<?xml version="1.0"?>

<sdf version='1.6'>
    <model name='{{ namespace }}'>
        <!-- Platform base model-->
        <include merge="true">
            <uri>model://usv_base</uri>
        </include>


        <plugin
            filename="ignition-gazebo-thruster-system"
            name="ignition::gazebo::systems::Thruster">
            <joint_name>left_engine_propeller_joint</joint_name>
            <thrust_coefficient>0.004422</thrust_coefficient>
            <fluid_density>1000</fluid_density>
            <propeller_diameter>0.2</propeller_diameter>
            <velocity_control>true</velocity_control>
            <max_thrust_cmd>1297.3168</max_thrust_cmd>
        </plugin>

        <plugin
            filename="ignition-gazebo-joint-position-controller-system"
            name="ignition::gazebo::systems::JointPositionController">
            <joint_name>left_chassis_engine_joint</joint_name>
            <use_velocity_commands>true</use_velocity_commands>
            <topic>{{ namespace }}/left/thruster/joint/cmd_pos</topic>
        </plugin>

        <plugin
            filename="ignition-gazebo-thruster-system"
            name="ignition::gazebo::systems::Thruster">
            <joint_name>right_engine_propeller_joint</joint_name>
            <thrust_coefficient>0.004422</thrust_coefficient>
            <fluid_density>1000</fluid_density>
            <propeller_diameter>0.2</propeller_diameter>
            <velocity_control>true</velocity_control>
            <max_thrust_cmd>1297.3168</max_thrust_cmd>
        </plugin>

        <plugin
            filename="ignition-gazebo-joint-position-controller-system"
            name="ignition::gazebo::systems::JointPositionController">
            <joint_name>right_chassis_engine_joint</joint_name>
            <use_velocity_commands>true</use_velocity_commands>
            <topic>{{ namespace }}/right/thruster/joint/cmd_pos</topic>
        </plugin>

        <plugin
            filename="libSurface.so"
            name="ignition::gazebo::systems::Surface">
            <link_name>base_link</link_name>
            <vehicle_length>6</vehicle_length>
            <vehicle_width>3.3</vehicle_width>
            <hull_radius>0.27</hull_radius>
            <fluid_level>0.45</fluid_level>

            <!-- Waves -->
            <wavefield>
            <size>1000.0 1000.0</size>
            <cell_count>50 50</cell_count>
            <wave>
                <model>PMS</model>
                <period>5</period>
                <number>3</number>
                <scale>1.1</scale>
                <gain>0.3</gain>
                <direction>1 0</direction>
                <angle>0.4</angle>
                <tau>2.0</tau>
                <amplitude>0.0</amplitude>
                <steepness>0.0</steepness>
            </wave>
            </wavefield>
        </plugin>

        <plugin
            filename="libSimpleHydrodynamics.so"
            name="ignition::gazebo::systems::SimpleHydrodynamics">
            <link_name>base_link</link_name>
            <!-- Added mass -->
            <xDotU>0.0</xDotU>
            <yDotV>0.0</yDotV>
            <nDotR>0.0</nDotR>
            <!-- Linear and quadratic drag -->
            <xU>51.3</xU>
            <xUU>72.4</xUU>
            <yV>40.0</yV>
            <yVV>0.0</yVV>
            <zW>500.0</zW>
            <kP>100.0</kP>
            <mQ>100.0</mQ>
            <nR>400.0</nR>
            <nRR>0.0</nRR>
        </plugin>

        <!-- Publish robot state information -->
        <plugin filename="libignition-gazebo-pose-publisher-system.so"
            name="ignition::gazebo::systems::PosePublisher">
            <publish_link_pose>true</publish_link_pose>
            <publish_sensor_pose>true</publish_sensor_pose>
            <publish_collision_pose>false</publish_collision_pose>
            <publish_visual_pose>false</publish_visual_pose>
            <publish_nested_model_pose>true</publish_nested_model_pose>
            <publish_model_pose>false</publish_model_pose>
            <use_pose_vector_msg>true</use_pose_vector_msg>
            <static_publisher>true</static_publisher>
            <static_update_frequency>1</static_update_frequency>
        </plugin>

        <!-- These plugins detect when target objects are placed at the
            the defined region. A message is published on the <topic> when these
            events occur -->
        <plugin filename="libEntityDetector.so"
                name="mbzirc::EntityDetector">
            <topic>/{{ namespace }}/target_object_detector/placed</topic>
            <pose>0 0 0.22 0 0 0</pose>
            <geometry>
            <box>
                <size>5 3.3 0.25</size>
            </box>
            </geometry>
        </plugin>
        <plugin filename="libEntityDetector.so"
                name="mbzirc::EntityDetector">
            <topic>/{{ namespace }}/target_object_detector/placed</topic>
            <pose>0 0 0.8 0 0 0</pose>
            <geometry>
            <box>
                <size>1.5 3.5 0.25</size>
            </box>
            </geometry>
        </plugin>
        <plugin filename="libEntityDetector.so"
                name="mbzirc::EntityDetector">
            <topic>/{{ namespace }}/target_object_detector/placed</topic>
            <pose>0 -1.35 0.22 0 0 0</pose>
            <geometry>
            <box>
                <size>6.0 0.58 0.25</size>
            </box>
            </geometry>
        </plugin>
        <plugin filename="libEntityDetector.so"
                name="mbzirc::EntityDetector">
            <topic>/{{ namespace }}/target_object_detector/placed</topic>
            <pose>0 1.35 0.22 0 0 0</pose>
            <geometry>
            <box>
                <size>6.0 0.58 0.25</size>
            </box>
            </geometry>
        </plugin>


        {% if odom_plugin -%}
        <!-- Odometry plugin-->
        <plugin
            filename="ignition-gazebo-odometry-publisher-system"
            name="ignition::gazebo::systems::OdometryPublisher">
            <dimensions>3</dimensions>
        </plugin>
        {% endif -%}

        {% if battery_plugin %}
        <!-- Battery plugin-->
        <plugin filename="libignition-gazebo-linearbatteryplugin-system.so"
        name="ignition::gazebo::systems::LinearBatteryPlugin">
            <battery_name>linear_battery</battery_name>
            <voltage>12.694</voltage>
            <open_circuit_voltage_constant_coef>12.694</open_circuit_voltage_constant_coef>
            <open_circuit_voltage_linear_coef>0</open_circuit_voltage_linear_coef>
            <initial_charge>{{ capacity }}</initial_charge>
            <capacity>{{ capacity }}</capacity>
            <resistance>0.061523</resistance>
            <smooth_current_tau>1.9499</smooth_current_tau>
            <power_load>6.6</power_load>
            <start_on_motion>true</start_on_motion>
            <fix_issue_225>true</fix_issue_225>
        </plugin>
        {% endif -%}

        {% if comms_plugin %}
        <!-- Comms endpoint-->
        <plugin
        filename="ignition-gazebo-comms-endpoint-system"
        name="ignition::gazebo::systems::CommsEndpoint">
            <address>{{ comms_address }}</address>
            <topic>model/{{ namespace }}/rx</topic>
        </plugin>
        {% endif -%}

        {% for sensor in sensors -%}
        <!-- Payload {{ name }} -->
        <include>
            <name>{{ sensor.name }}</name>
            <uri>model://{{ sensor.model }}</uri>
            <pose relative_to="base_link">
            {{ sensor.pose }}
            </pose>
        </include>

        <joint name="{{ sensor.name }}_joint" type="fixed">
            <parent>base_link</parent>
            <child>{{ sensor.name }}</child>
        </joint>
        {% endfor -%}
    </model>
</sdf>
